-- Supondo que a população de um país A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a população de B seja 200000 habitantes com uma taxa de crescimento de 1.5%. Faça um procedimento que calcule e escreva o número de anos necessários para que a população do país A ultrapasse ou iguale a população do país B, mantidas as taxas de crescimento.

DELIMITER //
CREATE PROCEDURE taxa()
BEGIN
	DECLARE a INT default 80000;
	DECLARE b INT default 20000;
DECLARE ano INT default 0; 
	SET a = a +a *0.03;
	SET b= b+b* 0.015;
	SET ano = ano+1;
	WHILE a<=b THEN
	SET ano = ano+1
	END WHILE ;
	SELECT ano;	
END //
DELIMITER  ;

-- Faça um procedimento que peça dois números, base e expoente, calcule e mostre o primeiro número elevado ao segundo número. Não deve-se utilizar a função de potência da linguagem.


DELIMITER //
CREATE PROCEDURE elevar(base INT, expoente INT)
BEGIN
	DECLARE total INT;
	DECLARE cont INT default 0;
	REPEAT
	SET total = expoente * expoente;
	SET cont = cont +1;
	UNTIL cont = base
	END REPEAT;
	SELECT total;
END //
DELIMITER  ;




-- Faça um procedimento que peça um número inteiro e determine se ele é ou não um número primo. Um número primo é aquele que é divisível somente por ele mesmo e por 1.

DELIMITER //
CREATE PROCEDURE primo(num INT)
BEGIN
	DECLARE i INT default 0;
	DECLARE cont INT default 0;
	DECLARE cont2 INT default 0;
	REPEAT
		IF num%(i+1) = 0 THEN
			SET cont = cont+1;
		END IF;
		SET cont2 = cont2 +1;
	UNTIL cont2=num;
	END REPEAT;
	IF cont = 2 THEN
		SELECT “o numero é primo”;
	ELSE 
		SELECT ”o numero não é primo”;
	END IF;
	END //
DELIMITER  ;




-- Altere o procedimento de cálculo dos números primos, informando, caso o número não seja primo, por quais números ele é divisível.

DELIMITER //
CREATE PROCEDURE primo2(num INT)
BEGIN
	DECLARE i INT default 0;
	DECLARE cont INT default 0;
	DECLARE cont2 INT default 0;
	REPEAT
		IF num%(i+1) = 0 THEN
			SET cont = cont+1;
		ELSE
		SET cont
		END IF;
		SET cont2 = cont2 +1;
	UNTIL cont2=num;
	END REPEAT;
	IF cont = 2 THEN
		SELECT “o numero é primo”;
	ELSE 
		SELECT ”o numero não é primo pois é divisível por”;
	END IF;
	END REPEAT;
	END //
DELIMITER  ;


-- Escrever um procedimento que calcule e mostre a média aritmética dos números entre 13 e 73, inclusive.

DELIMITER //
CREATE PROCEDURE media()
BEGIN 

	DECLARE min INT Default 13;
	DECLARE max INT Default 73;
	DECLARE soma INT Default 13;
DECLARE aux INT Default 13;

REPEAT 
	SET aux = aux +1;
	SET soma = soma+aux;
UNTIL aux=max
END REPEAT;
SELECT soma (max-min+1)
END//
DELIMITER ;



-- Desenvolver um procedimento que faça o somatório de todos os números ímpares que são múltiplos de três e que se encontram no conjunto dos números de 1 até 500
DELIMITER //
CREATE PROCEDURE calculo()
BEGIN
	DECLARE min INT Default 1;
	DECLARE max INT Default 500;
	DECLARE soma INT Default 0;
	DECLARE impar INT;
	IF mod(m,2) = 0 THEN
		SET impar = 0;
	ELSE 
		SET impar =1;
	END IF;
	IF impar =1 THEN
		WHILE mod(m,3) = 0 THEN
			soma = soma +1;
		END WHILE;
	SELECT CONCAT(“a soma é”,soma);
	END IF;
END //
DELIMITER ;
CALL calculo();


-- Calcule a série de Fibonacci para um número inteiro não negativo informado pelo usuário. A série de Fibonacci inicia com os números F0 = 0 e F1 = 1, e cada número posterior equivale à soma dos dois números anteriores (Fn = Fn-1 + Fn-2). Por exemplo, caso o usuário informe o número 10, o resultado seria: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34.
CREATE PROCEDURE fib(num INT)
BEGIN
		DECLARE cont default 0;
		REPEAT 
			SET num = num +1;
			SET num = num + num +2;
			SET cont = cont + 1;
		UNTIL cont = num;
		END REPEAT;
		SELECT num;
END //
DELIMITER ;


